#!/bin/bash

# This script creates an chrooted environment for a web application 
# - sftp user 
# - web vhost
# - sql database


# Set program name variable
prog=$0

function usage {
    echo "usage: $prog [OPTION]"
    echo ""
    echo "OPTIONS"
    echo " -d       databasename"
    echo " -p       project name, used for servername of apache : http://project/"
    echo " -u       username"
    echo ""
    echo "Examples"
    echo "$prog -d www.example.com -u foo" 
}

function genpasswd {
if [ $# -eq 1 ]; then
    if [ $1 -gt 8 ]; then
        #echo -n "mot de passe: "
        pass=$(</dev/urandom tr -dc A-KM-NP-Za-km-z2-9 | head -c$1)
        echo $pass
    else
        echo "argument doit etre superieur a 6"
        exit 1
    fi
else
    #echo -n "Pas d'argument donc par defaut mdp de 8 caracteres: "
    pass=$(</dev/urandom tr -dc A-KM-NP-Za-km-z2-9 | head -c10)
    echo $pass
fi
}

# Reset OPTIND
OPTIND=1

DOMAIN=""
DATABASE=""
USER=""

GROUP=www-data
WDIR=/var/www
FPMPOOLDIR=/etc/php/5.6/fpm/pool.d
VHOSTDIR=/etc/apache2/sites-available
VHOSTENABLEDDIR=/etc/apache2/sites-enabled
LOGAPACHE=/var/log/apache2
binfpm=php-fpm5.6
apacheuser=www-data
MYSQLBIN=`which mysql`
MYSQLADMIN=`which mysqladmin`

while getopts ":d:p:u:h" opt; do
    case "$opt" in
        d   ) DATABASE="${OPTARG}" ;;
        p   ) DOMAIN="${OPTARG}" ;;
        u   ) USER="${OPTARG}" ;;
        h|* ) usage; exit 1 ;;
    esac
done

shift $((OPTIND-1))

if [ "x$DOMAIN" == "x" ]; then
    usage
    exit 1
fi 

# check if the script can connect to mysql :
$MYSQLADMIN ping > /dev/null 2>&1
if [ ! $? -eq 0 ]; then 
    echo "Could not connect to mysql server. Is server alive ? Is there a ~/.my.cnf file"
    exit 256
fi

PROJECT=$(echo $DOMAIN | sed "s/[-()_*]//g" | cut -d. -f1)
# don't want a project named wwww
if [ "x$PROJECT" == "xwww" ]; then
    PROJECT=$(echo $DOMAIN | sed "s/[-()_*]//g" | cut -d. -f2)
fi

if [ "x$USER" == "x" ]; then 
    # user name not defined in option so create one from domaine name
    USER="$(echo $PROJECT | sed "s/[-()_*]//g" | cut -d. -f1|head -c5)user"
else
    if [ ${#USER} -gt 9 ]; then
        echo "USER name too long"
        usage
        exit 1
    fi
fi 

if [ "x$DATABASE" == "x" ]; then                                         
    # database name not defined in option so create one from project name
    DATABASE=$PROJECT
fi 

DATBASEUSER="${DATABASE}user"

# check if user already exists
id $USER > /dev/null
if [ $? -eq 0 ]; then 
    echo "User $USER already exists, please use another one"
    exit 1
fi 
# check if domaine already exists
if [ -f $VHOSTDIR/vhost_$DOMAIN.conf ]; then
    echo "Domain $DOMAIN already configured on this server, please check"
    exit 1
fi 
# check if database already exists
$MYSQLBIN -e "show databases;" | grep $DATABASE > /dev/null 2>&1
if [ $? -eq 0 ]; then 
    echo "Database $DATABASE already exists, please use another name"
    exit 1
fi


sftppasswd=$(genpasswd)

echo "adding user $USER"
useradd \
   -c "User chrooted" \
   -d "${WDIR}/${PROJECT}/" \
   -g "${GROUP}" \
   -s "/bin/chrootuser" \
   "${USER}"

echo "${USER}:${sftppasswd}" | chpasswd

echo "Creating homedir: ${WDIR}/${PROJECT}/"
mkdir ${WDIR}/${PROJECT}/ \
   ${WDIR}/${PROJECT}/bin/ \
   ${WDIR}/${PROJECT}/lib/ \
   ${WDIR}/${PROJECT}/lib64/ \
   ${WDIR}/${PROJECT}/usr/ \
   ${WDIR}/${PROJECT}/usr/bin/ \
   ${WDIR}/${PROJECT}/dev/ 
   
chmod 700 \
   ${WDIR}/${PROJECT}/ \
   ${WDIR}/${PROJECT}/bin/ \
   ${WDIR}/${PROJECT}/lib/ \
   ${WDIR}/${PROJECT}/lib64/ \
   ${WDIR}/${PROJECT}/usr/ \
   ${WDIR}/${PROJECT}/usr/bin/ \
   ${WDIR}/${PROJECT}/dev/

cp /lib64/ld-linux-x86-64.so.2 ${WDIR}/${PROJECT}/lib64/ 
for b in /bin/bash /bin/nano /bin/ls /usr/bin/tail /usr/bin/vim /bin/cat;
do 
    cp $b ${WDIR}/${PROJECT}/$b
    P="${WDIR}/${PROJECT}"
    ldd $b | grep "/lib/" | awk -v "PROJECT=$P" '{ print "cp "$3" "PROJECT"/lib/" }' | bash
done

mknod ${WDIR}/${PROJECT}/dev/null c 1 3 -m 666
chown -R "${PROJECT}:${GROUP}" ${WDIR}/${PROJECT}


echo "creating web directory $WDIR/$PROJECT/www"
mkdir -p $WDIR/$PROJECT/www
chmod 0755 $WDIR/$PROJECT/
chown root:root $WDIR/$PROJECT/
chown ${USER}:$apacheuser $WDIR/$PROJECT/www

echo "configuring $binfpm"
sed -e "s/DOMAIN/${PROJECT}/g" \
    -e "s/USER/${USER}/g" \
    $FPMPOOLDIR/template.conf.tpl > $FPMPOOLDIR/${PROJECT}.conf
if [ ! $binfpm -t ]; then
    echo "$binfpm configuration is invalid. Exit script"
    exit 1
fi

echo "configuring apache"
sed -e "s/PROJECT/${PROJECT}/g" \
    -e "s/DOMAIN/${domain}/g" \
    $VHOSTDIR/vhost_template.conf.tpl > $VHOSTDIR/vhost_${DOMAIN}.conf
ln -s $VHOSTDIR/vhost_${DOMAIN}.conf $VHOSTENABLEDDIR/vhost_${DOMAIN}.conf
if [ ! apachectl -t ]; then
    echo "httpd configuration is invalid. Exit script"
    exit 1
fi

echo "adding database and user"
dbpasswd=$(genpasswd)
mysql -u root -e "create database ${DATABASE};"
mysql -u root -e "grant usage on *.* to ${DATBASEUSER}@localhost identified by '${dbpasswd}';GRANT ALL PRIVILEGES ON ${PROJECT}.* TO ${DATABASEUSER}@localhost with grant option;"


echo "Summary Notes: "
ip=$(ip a |grep inet |grep "scope global" |awk '{print $2}' |cut -d/ -f1)

cat << EOF
sftp
---
login        : ${USER}
mot de passe : ${sftppasswd}
chemin       : $WDIR/${PROJECT}/www

sql
---
login        : ${DATABASEUSER}
mot de passe : ${dbpasswd}
bdd          : ${DATABASE}

url          : http://${domain}
ip           : ${ip}
EOF




echo "creating directory /srv/www/$PROJECT/"
mkdir -p /srv/www/$PROJECT/www
chmod 0755 /srv/www/$project/
chown root:root /srv/www/$project/
chown ${sftpuser}:apache /srv/www/$project/www

echo "configuring php-fpm"
sed "s/DOMAIN/$project}/g" /etc/php-fpm.d/template.conf.tpl > /etc/php-fpm.d/${project}.conf
if ! php-fpm -t; then
    echo "php5-fpm configuration is invalid. Exit script"
    exit 1
fi

echo "configuring apache"
sed "s/PROJECT/${project}/g" /etc/httpd/conf.d/template.conf.tpl > /etc/httpd/conf.d/vhost_${domain}.conf
sed -i "s/DOMAIN/${domain}/g" /etc/httpd/conf.d/vhost_${domain}.conf
if ! apachectl -t; then
    echo "httpd configuration is invalid. Exit script"
    exit 1
fi

echo "adding database and user"
dbpasswd=$(genpasswd)
mysql -u root -p$(cat /root/.pdb) -e "create database ${project};"
mysql -u root -p$(cat /root/.pdb) -e "grant usage on *.* to ${sqluser}@localhost identified by '${dbpasswd}';GRANT ALL PRIVILEGES ON ${project}.* TO ${sqluser}@localhost with grant option;"


echo "Summary Notes: "

cat << EOF
sftp
---
login        : ${sftpuser}
mot de passe : ${sftppasswd}
chemin       : /srv/www/${project}/www

sql
---
login        : ${sqluser}
mot de passe : ${dbpasswd}
bdd          : ${project}

url          : http://${domain}
EOF
